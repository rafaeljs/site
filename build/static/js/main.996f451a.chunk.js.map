{"version":3,"sources":["Cabecalho/TextoAnimado.js","Cabecalho/Cabecalho.js","App.js","serviceWorker.js","index.js","Img/Code.jpg"],"names":["styles","Texto","color","paddingLeft","TextoAnimado","numb","name","text","substr","this","setState","Inicio","Restante","Caracter","Name","CountDev","CountNome","Back","contador","setTexto","window","setInterval","state","length","bind","react_default","a","createElement","Typography_default","align","variant","style","React","Component","Imagem","width","height","backgroundImage","concat","ImgCode","paddingTop","withStyles","props","Cabecalho_TextoAnimado","App","className","Cabecalho","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.996f451a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ImgCode from \"../Img/Code.jpg\";\r\n\r\nconst styles = {\r\n    Texto:{\r\n        color:'white',\r\n        paddingLeft:450,\r\n    },\r\n};\r\n\r\nclass TextoAnimado extends React.Component{\r\n    setTexto(numb,name) {\r\n        var Dev = \"Desenvolvedor\";\r\n        var Nome = \"Rafael Silvério\";\r\n        var text = \"\";\r\n        if(name)\r\n            text = Nome.substr(0,numb);\r\n        else\r\n            text = Dev.substr(0,numb);\r\n        this.setState({\r\n            Inicio:\"Eu sou \",\r\n            Restante:text,\r\n            Caracter:numb,\r\n            Name:name,\r\n        });\r\n    };\r\n    componentWillMount() {\r\n        this.setState({\r\n            Restante:\"\",\r\n            CountDev:13,\r\n            CountNome:15,\r\n            Name:true,\r\n            Back:false,\r\n            contador:0,\r\n        });\r\n        this.setTexto(1,true);\r\n\r\n    };\r\n    componentDidMount() {\r\n        window.setInterval(function () {\r\n            if(this.state.Name){\r\n                if(this.state.Restante.length == this.state.CountNome){\r\n                    if(this.state.contador == 5){\r\n                        this.state.contador = 0;\r\n                        this.setState({\r\n                            Back:true,\r\n                        });\r\n                        this.setTexto(this.state.Restante.length-1,this.state.Name);\r\n                    }\r\n                    else\r\n                        this.state.contador++;\r\n                }\r\n                else{\r\n                    if(this.state.Back){\r\n                        if(this.state.Restante.length == 0) {\r\n                            this.setState({\r\n                                Back: false,\r\n                            });\r\n                            this.setTexto(1, !this.state.Name);\r\n                        }\r\n                        else\r\n                            this.setTexto(this.state.Restante.length-1,this.state.Name);\r\n                    }\r\n                    else\r\n                        this.setTexto(this.state.Restante.length+1,this.state.Name);\r\n                }\r\n            }\r\n            else{\r\n                if(this.state.Restante.length == this.state.CountDev){\r\n                    if(this.state.contador == 5) {\r\n                        this.state.contador = 0;\r\n                        this.setState({\r\n                            Back: true,\r\n                        });\r\n                        this.setTexto(this.state.Restante.length - 1, this.state.Name);\r\n                    }\r\n                    else\r\n                        this.state.contador++;\r\n                }\r\n                else{\r\n                    if(this.state.Back){\r\n                        if(this.state.Restante.length == 0){\r\n                            this.setState({\r\n                                Back:false,\r\n                            });\r\n                            this.setTexto(1,!this.state.Name);\r\n                        }\r\n                        else\r\n                            this.setTexto(this.state.Restante.length-1,this.state.Name);\r\n                    }\r\n                    else{\r\n                        this.setTexto(this.state.Restante.length+1,this.state.Name);\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this), 100);\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>\r\n                <Typography align={\"left\"} variant={\"display3\"} style={styles.Texto}>\r\n                    {this.state.Inicio}{this.state.Restante}\r\n                </Typography>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TextoAnimado;","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport ImgCode from '../Img/Code.jpg';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextoAnimado from './TextoAnimado';\r\n\r\n\r\nconst styles = {\r\n    Imagem: {\r\n        width:'100%',\r\n        height:658,\r\n        backgroundImage: `url(${ImgCode})`,\r\n    },\r\n    Texto:{\r\n        color:'white',\r\n        paddingTop:200\r\n    },\r\n};\r\nfunction MediaCard(props) {\r\n        return(\r\n            <div style={styles.Imagem}>\r\n                <div>\r\n                    <Typography align={\"center\"} variant={\"display3\"} style={styles.Texto}>\r\n                        Olá!\r\n                    </Typography>\r\n                    <TextoAnimado/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    MediaCard.propTypes = {\r\n        classes: PropTypes.object.isRequired,\r\n    };\r\n\r\n    export default withStyles(styles)(MediaCard);","import React, { Component } from 'react';\r\nimport Cabecalho from './Cabecalho/Cabecalho';\r\n\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Cabecalho/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Code.dfc88b21.jpg\";"],"sourceRoot":""}